@page "/projects/project"
@page "/projects/project/{id:guid}"

@inject DatabaseOperations db
@inject ModalService ms

<nav class="navbar is-primary" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
        <a class="navbar-item" href="/">
            <h1 class="title is-size-4 has-text-white">
                Kanbanify
            </h1>
        </a>

        <a role="button" class="navbar-burger burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
        </a>
    </div>

    <div id="navbarBasicExample" class="navbar-menu">
        <div class="navbar-start">
            <div class="navbar-item">
                <h3 class="has-text-white has-text-weight-semibold">@ViewModel.ProjectModel?.Name</h3>
            </div>
        </div>

        <div class="navbar-end">
            <div class="navbar-item has-dropdown is-hoverable">
                <a class="navbar-link">
                    <span class="icon">
                        <icon class="fa fa-bell"></icon>
                    </span>
                </a>
                <div class="navbar-dropdown is-right">
                    @if (ViewModel.Notifications.Count > 0)
                    {
                        @foreach (var notification in ViewModel.Notifications)
                        {
                            <div class="navbar-item">
                                <div>
                                    <p>@notification.Item1</p>
                                    <p class="is-size-7 is-uppercase has-text-weight-bold has-text-grey-light">@notification.Item2</p>
                                </div>
                            </div>
                            <hr class="navbar-divider" />
                        }
                        @if (ViewModel.Notifications.Count > 0)
                        {
                            <a class="navbar-item" @onclick="ClearNotifications">
                                <span class="has-text-weight-bold has-text-grey">
                                    Clear all notifications
                                </span>
                            </a>
                        }
                    }
                    else
                    {
                        <div class="navbar-item">
                            <p class="has-text-weight-bold has-text-grey">
                                Nothing to see here
                            </p>
                        </div>
                    }

                </div>
            </div>

            <a @onclick="ViewModel.OnAddStageClick" class="navbar-item">
                <strong>Add Stage</strong>
            </a>
        </div>
    </div>
</nav>

<div class="section">
    <div class="container">
        <div class="columns">
            @foreach (var model in ViewModel.StageModels)
            {
                <CascadingValue Value="ViewModel">
                    <Stage StageModel="model" />
                </CascadingValue>
            }
        </div>
    </div>
</div>

<Modal />

@code {

    // Parameters

    [Parameter] public Guid Id { get; set; }

    // Properties

    public ProjectViewModel ViewModel { get; set; }

    // Events

    protected override void OnInitialized()
    {
        ViewModel = new ProjectViewModel(Id, db, ms);
        ViewModel.StateHasChanged += () => StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        await ViewModel.GetModels();
    }

    private void ClearNotifications()
    {
        ViewModel.Notifications.Clear();
        StateHasChanged();
    }
}
